version: '3.8'

# networks:
#   iris-net:
#     driver: bridge
#     driver_opts:
#       com.docker.network.enable_ipv4: "true"
#     ipam:
#       driver: default
#       config:
#         - subnet: 10.0.0.0/16

services:
    iris:
        init: true
        # networks:
        #   iris-net:
        #     ipv4_address: 10.0.0.11
        build: 
          context: .
          dockerfile: Dockerfile
          args:
            - IRIS_PASSWORD=${IRIS_PASSWORD:?err}
        image: iris:iam
        hostname: iris
        environment:
          - ISC_DATA_DIRECTORY=/IRIS
          # - ISC_CPF_MERGE_FILE=/ISC/iris.conf
        volumes: 
        - ./keys:/keys 
        - ./src/:/src
        - ./data:/data
        - databases:/databases
        - IRIS:/IRIS
        ports:
          - 1972
          - 49574:52773
        command:
          --key /keys/iris.key
          -a /src/shell/init.sh
    iam-migrations:
      image: ${ISC_IAM_IMAGE:?err}
      command: kong migrations bootstrap
      # networks:
      #     iris-net:
      #       ipv4_address: 10.0.0.12
      depends_on:
        - iris
        - db
      environment:
        KONG_DATABASE: postgres
        KONG_PG_DATABASE: ${KONG_PG_DATABASE:-iam}
        KONG_PG_HOST: db
        KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-iam}
        KONG_PG_USER: ${KONG_PG_USER:-iam}
        KONG_CASSANDRA_CONTACT_POINTS: db
        # ISC_IRIS_URL: "IAM:${IRIS_PASSWORD}@10.0.0.11:52773/api/iam/license"
        ISC_IRIS_URL: "IAM:${IRIS_PASSWORD:?err}@iris:52773/api/iam/license"
        # ISC_CA_CERT: ${ISC_CA_CERT}
      restart: on-failure
      links:
        - db:db
    iam:
      image: ${ISC_IAM_IMAGE:?err}
      # networks:
      #     iris-net:
      #       ipv4_address: 10.0.0.13
      depends_on:
        - iris
        - db
      environment:
        KONG_ADMIN_ACCESS_LOG: /dev/stdout
        KONG_ADMIN_ERROR_LOG: /dev/stderr
        KONG_ADMIN_LISTEN: '0.0.0.0:8001'
        KONG_ANONYMOUS_REPORTS: 'off'
        KONG_CASSANDRA_CONTACT_POINTS: db
        KONG_DATABASE: postgres
        KONG_PG_DATABASE: ${KONG_PG_DATABASE:-iam}
        KONG_PG_HOST: db
        KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-iam}
        KONG_PG_USER: ${KONG_PG_USER:-iam}
        KONG_PROXY_ACCESS_LOG: /dev/stdout
        KONG_PROXY_ERROR_LOG: /dev/stderr
        KONG_PORTAL: 'on'
        KONG_PORTAL_GUI_PROTOCOL: http
        KONG_PORTAL_GUI_HOST: '127.0.0.1:8003'
        KONG_ADMIN_GUI_URL: http://localhost:8002
        # ISC_IRIS_URL: "IAM:${IRIS_PASSWORD}@10.0.0.11:52773/api/iam/license"
        ISC_IRIS_URL: "IAM:${IRIS_PASSWORD}@iris:52773/api/iam/license"
        # ISC_CA_CERT: ${ISC_CA_CERT}
      links:
        - db:db
      ports:
        - target: 8000
          published: 8000
          protocol: tcp
        - target: 8001
          published: 8001
          protocol: tcp
        - target: 8002
          published: 8002
          protocol: tcp
        - target: 8003
          published: 8003
          protocol: tcp
        - target: 8004
          published: 8004
          protocol: tcp
        - target: 8443
          published: 8443
          protocol: tcp
        - target: 8444
          published: 8444
          protocol: tcp
        - target: 8445
          published: 8445
          protocol: tcp
      restart: on-failure
    db:
      image: postgres:9.6
      depends_on:
        - iris
      # networks:
      #     iris-net:
      #       ipv4_address: 10.0.0.14
      environment:
        POSTGRES_DB: ${KONG_PG_DATABASE:-iam}
        POSTGRES_PASSWORD: ${KONG_PG_PASSWORD:-iam}
        POSTGRES_USER: ${KONG_PG_USER:-iam}
      volumes:
        - 'pgdata:/var/lib/postgresql/data'
      healthcheck:
        test: ["CMD", "pg_isready", "-U", "${KONG_PG_USER:-iam}"]
        interval: 30s
        timeout: 30s
        retries: 3
      restart: on-failure
      stdin_open: true
volumes:
  databases:
  IRIS:
  pgdata:
